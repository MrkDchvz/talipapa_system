package admin.panels;

import admin.forms.AddOrderForm;
import admin.forms.DeleteOrderForm;
import databaseManager.DatabaseConnectionManager;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */

/**
 *
 * @author Marku
 */
public class AdminOrderTablePanel extends javax.swing.JPanel {
    private AddOrderForm addOrderFormScreen;
    private DeleteOrderForm deleteOrderFormScreen;
    private Connection con;
    private PreparedStatement preparedStatement;
    private ResultSet resultSet;

    /**
     * Creates new form OrderProductTablePanel
     */
    public AdminOrderTablePanel() {
        initComponents();
        connect();
        populateTable();
    }
    
    public void connect() {
        try {
            con  = DatabaseConnectionManager.getConnection();
        } catch (SQLException ex) {
            Logger.getLogger(AdminOrderTablePanel.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }
    
    public void populateTable() {
        try {
            int columnCount;
//            Prepare query to get all active products on the database
            preparedStatement = con.prepareStatement(
                    "SELECT orderId, orders.productId as productId, products.productName as productName, orderQuantity,  totalAmount, orderDate  "
                    + "FROM orders "
                    + "LEFT JOIN products "
                    + "ON orders.productId = products.productId "
                    + "WHERE orders.isVoid = 0;");
//            store results to resultSet
            resultSet = preparedStatement.executeQuery();
//            Fetch metadata to get the information about the table (i.e columnCount, item of each column/row etc.)
            ResultSetMetaData resultSetMetaData = resultSet.getMetaData();
//            Subtract to 1 because isVoid wont be displayed. 
            columnCount = resultSetMetaData.getColumnCount();
            DefaultTableModel defaultTableModel = (DefaultTableModel) tblOrder.getModel();
//           Clear the table to ensure that there are no duplicates
            while (defaultTableModel.getRowCount() > 0) {
                defaultTableModel.removeRow(0);
            }

            while (resultSet.next()) {
//                Used Vector because DefaultTableModel.add(Vector) requires a Vector to add a row
//                but Vectors are slower than ArrayList<> its just in this particular sitaution vector is required.
                Vector row = new Vector();
//                Populate the vector (i.e [1, Pencil , 13, 12, Office Supply])
                for (int start = 1; start <= columnCount; start++) {
                    row.add(resultSet.getString("orderId"));
                    row.add(resultSet.getString("productId"));
                    row.add(resultSet.getString("productName"));
                    row.add(resultSet.getString("orderQuantity"));
                    row.add(resultSet.getString("totalAmount"));
                    row.add(resultSet.getString("orderDate"));
                }
//                Add row to the jTable i.e ([1, Pencil , 13, 12, Office Supply])
                defaultTableModel.addRow(row);

            }

        } catch (SQLException ex) {
            Logger.getLogger(AdminOrderTablePanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
     public boolean isScreenOpened(ArrayList<JFrame> screenArr) {
        for (JFrame screen : screenArr) {
            if (screen != null && screen.isVisible()) {
                screen.setVisible(true);
                screen.toFront();
                return true;
            }
        }
        return false;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel2 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        txtSearchOrder = new javax.swing.JTextField();
        btnSearchProduct = new javax.swing.JButton();
        btnRefreshOrder = new javax.swing.JButton();
        btnDeleteOrder = new javax.swing.JButton();
        btnAddOrder1 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblOrder = new javax.swing.JTable();

        setPreferredSize(new java.awt.Dimension(682, 708));
        setLayout(new java.awt.GridBagLayout());

        jPanel2.setMinimumSize(new java.awt.Dimension(800, 475));
        jPanel2.setPreferredSize(new java.awt.Dimension(800, 475));

        btnSearchProduct.setForeground(new java.awt.Color(255, 255, 255));
        btnSearchProduct.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/search.png"))); // NOI18N
        btnSearchProduct.setText("Search");
        btnSearchProduct.setPreferredSize(new java.awt.Dimension(60, 30));
        btnSearchProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchProductActionPerformed(evt);
            }
        });

        btnRefreshOrder.setForeground(new java.awt.Color(255, 255, 255));
        btnRefreshOrder.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/refresh.png"))); // NOI18N
        btnRefreshOrder.setText("Refresh");
        btnRefreshOrder.setPreferredSize(new java.awt.Dimension(60, 30));
        btnRefreshOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshOrderActionPerformed(evt);
            }
        });

        btnDeleteOrder.setForeground(new java.awt.Color(255, 255, 255));
        btnDeleteOrder.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/trash.png"))); // NOI18N
        btnDeleteOrder.setText("Delete");
        btnDeleteOrder.setPreferredSize(new java.awt.Dimension(60, 30));
        btnDeleteOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteOrderActionPerformed(evt);
            }
        });

        btnAddOrder1.setForeground(new java.awt.Color(255, 255, 255));
        btnAddOrder1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/add.png"))); // NOI18N
        btnAddOrder1.setText("Add");
        btnAddOrder1.setPreferredSize(new java.awt.Dimension(60, 30));
        btnAddOrder1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddOrder1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(txtSearchOrder, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSearchProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 170, Short.MAX_VALUE)
                .addComponent(btnRefreshOrder, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnAddOrder1, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnDeleteOrder, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSearchOrder, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSearchProduct, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addContainerGap(36, Short.MAX_VALUE)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnRefreshOrder, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDeleteOrder, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAddOrder1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(8, 8, 8))
        );

        tblOrder.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Order Id", "Product Id", "Product Name", "Order Quantity", "Total Amount", "Order Date"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblOrder);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane2)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 334, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14))
        );

        add(jPanel2, new java.awt.GridBagConstraints());
    }// </editor-fold>//GEN-END:initComponents

    private void btnSearchProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchProductActionPerformed
        String searchText = txtSearchOrder.getText().toUpperCase();
        
//        Set a tableRowSorter
        TableRowSorter<DefaultTableModel> rowSorter = new TableRowSorter<>((DefaultTableModel) tblOrder.getModel());
        tblOrder.setRowSorter(rowSorter);
//      Display all items on the table if search textfield is blank
        if (searchText.trim().length() == 0) {
            rowSorter.setRowFilter(null);
//      Display filtered Results based on regexFilter
        } else {
            rowSorter.setRowFilter(RowFilter.regexFilter(searchText));
        }
    }//GEN-LAST:event_btnSearchProductActionPerformed

    private void btnRefreshOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshOrderActionPerformed
        this.populateTable();


    }//GEN-LAST:event_btnRefreshOrderActionPerformed

    private void btnDeleteOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteOrderActionPerformed
        // TODO add your handling code here:
        ArrayList<JFrame> frameArr = new ArrayList<>();
        frameArr.add(addOrderFormScreen);
        if (isScreenOpened(frameArr) == false) {
                    // Create a new instance of deleteOrderForm if there are no instances 
            if (deleteOrderFormScreen == null) {
                deleteOrderFormScreen = new DeleteOrderForm(this);
            } 
//        Displays the current deleteOrderForm and send it to the front if an instance already exists
            deleteOrderFormScreen.setVisible(true);
            deleteOrderFormScreen.toFront();
        }
    }//GEN-LAST:event_btnDeleteOrderActionPerformed

    private void btnAddOrder1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddOrder1ActionPerformed
        // TODO add your handling code here:
         ArrayList<JFrame> frameArr = new ArrayList<>();
        frameArr.add(deleteOrderFormScreen);
        if (isScreenOpened(frameArr) == false) {
                    // Create a new instance of deleteOrderForm if there are no instances 
            if (addOrderFormScreen == null) {
                addOrderFormScreen = new AddOrderForm(this);
            } else {
                addOrderFormScreen.populateComboBox();
            }
//        Displays the current deleteOrderForm and send it to the front if an instance already exists
            addOrderFormScreen.setVisible(true);
            addOrderFormScreen.toFront();
           
        }
    }//GEN-LAST:event_btnAddOrder1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddOrder1;
    private javax.swing.JButton btnDeleteOrder;
    private javax.swing.JButton btnRefreshOrder;
    private javax.swing.JButton btnSearchProduct;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tblOrder;
    private javax.swing.JTextField txtSearchOrder;
    // End of variables declaration//GEN-END:variables

    /**
     * @return the adminProductTablePanelScreen
     */
 
}
